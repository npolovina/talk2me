name: Cleanup AWS Resources

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Remove IAM role and OIDC provider
        run: |
          # Set variables
          ROLE_NAME="github-actions-eks-role"
          GITHUB_OIDC_PROVIDER_URL="https://token.actions.githubusercontent.com"
          
          # Get AWS account ID
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "AWS Account ID: $ACCOUNT_ID"
          
          # 1. Detach all policies from the role
          echo "Detaching policies from role $ROLE_NAME..."
          for policy_arn in $(aws iam list-attached-role-policies --role-name $ROLE_NAME --query "AttachedPolicies[].PolicyArn" --output text 2>/dev/null || echo ""); do
            echo "Detaching policy: $policy_arn"
            aws iam detach-role-policy --role-name $ROLE_NAME --policy-arn $policy_arn
          done
          
          # 2. Delete custom policy if it exists
          POLICY_NAME="EKS-Management-Policy"
          POLICY_ARN="arn:aws:iam::${ACCOUNT_ID}:policy/${POLICY_NAME}"
          if aws iam get-policy --policy-arn $POLICY_ARN 2>/dev/null; then
            echo "Deleting custom policy $POLICY_NAME..."
            aws iam delete-policy --policy-arn $POLICY_ARN
          fi
          
          # 3. Delete the IAM role
          echo "Deleting role $ROLE_NAME..."
          aws iam delete-role --role-name $ROLE_NAME 2>/dev/null || echo "Role does not exist or was already deleted"
          
          # 4. Delete the OIDC provider
          PROVIDER_ARN="arn:aws:iam::${ACCOUNT_ID}:oidc-provider/${GITHUB_OIDC_PROVIDER_URL}"
          if aws iam list-open-id-connect-providers | grep -q "$PROVIDER_ARN"; then
            echo "Deleting OIDC provider..."
            aws iam delete-open-id-connect-provider --open-id-connect-provider-arn $PROVIDER_ARN
          fi
          
          echo "Cleanup completed."