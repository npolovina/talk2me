name: 2. Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      image_tag:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'

env:
  AWS_REGION: ${{ github.event.inputs.region }}
  IMAGE_TAG: ${{ github.event.inputs.image_tag }}
  BACKEND_ECR_REPOSITORY: talk2me-backend
  FRONTEND_ECR_REPOSITORY: talk2me-frontend

permissions:
  id-token: write
  contents: read

jobs:
  setup-aws:
    runs-on: ubuntu-latest
    outputs:
      aws_account_id: ${{ steps.get-aws-account.outputs.account_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: get-aws-account
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "account_id=$AWS_ACCOUNT_ID" >> $GITHUB_OUTPUT

  create-ecr:
    needs: setup-aws
    runs-on: ubuntu-latest
    steps:
      - name: Create ECR Repositories & Lifecycle Policies
        run: |
          # same ECR repo creation and lifecycle policy logic as original
    # Uses same AWS credentials block

  login-ecr:
    needs: create-ecr
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.login.outputs.registry }}
    steps:
      - name: Login to ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v1

  build-backend:
    needs: login-ecr
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push.outputs.image }}
    steps:
      - name: Build and Push Backend
        id: push
        # same backend build & push logic

  build-frontend:
    needs: login-ecr
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push.outputs.image }}
    steps:
      - name: Build and Push Frontend
        id: push
        # same frontend build & push logic

  save-artifacts:
    needs: [build-backend, build-frontend, setup-aws]
    runs-on: ubuntu-latest
    steps:
      - name: Save image info
        # same artifact saving logic
